{"version":3,"sources":["Task.js","TaskList.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","taskData","handleDelete","bind","assertThisInitialized","handleComplete","handleEdit","handleFieldChange","handleSaveEdit","evt","preventDefault","onRemove","onComplete","setState","value","onSaveEdit","currentData","assign","target","name","classe","active","react_default","a","createElement","className","desc","when","hour","onClick","onSubmit","type","id","onChange","React","Component","TaskList","indexToRemove","onRemoveTask","indexToComplete","onCompleteTask","indexToEdit","onEditTask","_this2","map","index","src_Task","key","handleRemoveTask","handleCompleteTask","handleEditTask","Footer","handleTextChange","handleSubmit","handleDateChange","handleTimeChange","newTask","reset","for","class","placeholder","required","App","tasks","taskToAdd","prevState","push","splice","console","log","src_TaskList","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d62aae91.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Task extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            taskData: null,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleFieldChange = this.handleFieldChange.bind(this);\r\n        this.handleSaveEdit = this.handleSaveEdit.bind(this);\r\n    }\r\n\r\n    handleDelete(evt) {\r\n        evt.preventDefault();\r\n        !this.props.onRemove || this.props.onRemove();\r\n    }\r\n\r\n    handleComplete(evt) {\r\n        evt.preventDefault();\r\n        !this.props.onComplete || this.props.onComplete();\r\n    }\r\n\r\n    handleEdit(evt) {\r\n        evt.preventDefault();\r\n        this.setState({editing: true, taskData: this.props.value});\r\n    }\r\n\r\n    handleSaveEdit(evt) {\r\n        //evt.preventDefault();\r\n        this.setState({editing: false});\r\n        !this.props.onSaveEdit || this.props.onSaveEdit(this.state.taskData);\r\n    }\r\n\r\n    handleFieldChange(evt) {\r\n        evt.preventDefault();\r\n        const currentData = Object.assign({}, this.state.taskData);\r\n        currentData[evt.target.name] = evt.target.value;\r\n        this.setState({\r\n            taskData: currentData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let classe = \"\";\r\n\r\n        if (this.props.value.active === true) {\r\n            classe = \"task-container\";\r\n        } else {\r\n            classe = \"task-container inactive\";\r\n        }\r\n\r\n        if (this.state.editing === false) {\r\n            return(\r\n                <div className = {classe}>\r\n                    <h3>{this.props.value.desc}</h3>\r\n                    <h5>{this.props.value.when}</h5>\r\n                    <h5>{this.props.value.hour}</h5>\r\n                    <button className=\"task_buttons\" onClick={this.handleEdit}>edit</button>\r\n                    <button className=\"task_buttons\" onClick={this.handleDelete}>delete</button>\r\n                    <button className=\"task_buttons\" onClick={this.handleComplete}>check done</button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className = {classe}>\r\n                    <form onSubmit={this.handleSaveEdit}>\r\n                        <input className=\"desc_input\" name=\"desc\" value={this.state.taskData.desc} type=\"text\" id=\"desc\" onChange = {this.handleFieldChange}></input>\r\n                        <input className=\"when_input\" name=\"when\" value={this.state.taskData.when} type=\"date\" onChange = {this.handleFieldChange}></input>\r\n                        <input className=\"hour_input\" name=\"hour\" value={this.state.taskData.hour}  type=\"time\" onChange = {this.handleFieldChange}></input>\r\n                        <button className=\"task_buttons\" type=\"submit\">save</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\n\r\nclass TaskList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = null;/*props.tasks;{\r\n            tasks:  [\r\n                      {desc: 'Finish JS Work', when: '15-08-2019', active: true},\r\n                      {desc: 'Learn React', when: '01-08-2019', active: true},\r\n                      {desc: 'Learn NPM', when: '01-08-2019', active: true},\r\n                      {desc: 'Learn NODE.JS', when: '01-08-2019', active: true}\r\n                    ]\r\n        }*/\r\n    }\r\n\r\n    handleRemoveTask (indexToRemove) {\r\n        !this.props.onRemoveTask || this.props.onRemoveTask(indexToRemove);\r\n    }\r\n\r\n    handleCompleteTask (indexToComplete) {\r\n        !this.props.onCompleteTask || this.props.onCompleteTask(indexToComplete);\r\n    }\r\n\r\n    handleEditTask (indexToEdit, taskData) {\r\n        !this.props.onEditTask || this.props.onEditTask(indexToEdit, taskData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.value.map( (value, index) =>  {\r\n                return(\r\n                    <Task value = {value}\r\n                          key = {\"tsk\" + index}\r\n                          onRemove = {this.handleRemoveTask.bind(this, index)}\r\n                          onComplete = {this.handleCompleteTask.bind(this, index)}\r\n                          onSaveEdit = {this.handleEditTask.bind(this, index)}/>\r\n                )\r\n            })\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleTimeChange = this.handleTimeChange.bind(this);\r\n\r\n        this.state = {\r\n            desc: '',\r\n            when: '',\r\n            hour: '',\r\n            active: false\r\n        }\r\n    }\r\n\r\n    handleTextChange(evt) {\r\n        evt.preventDefault();\r\n        this.setState({desc: evt.target.value});\r\n    }\r\n\r\n    handleDateChange(evt) {\r\n        evt.preventDefault();\r\n        this.setState({when: evt.target.value});\r\n    }\r\n\r\n    handleTimeChange(evt) {\r\n        evt.preventDefault();\r\n        this.setState({hour: evt.target.value});\r\n    }\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        const newTask = {desc: this.state.desc, when: this.state.when, hour: this.state.hour, active: true};\r\n        this.props.onSubmit(newTask);\r\n        this.reset();\r\n    }\r\n\r\n    reset() {this.setState({desc: '', when: '', hour: ''})}\r\n\r\n    render() {\r\n        return (\r\n            <form className = \"footer-container\" onSubmit = {this.handleSubmit}>\r\n                <label for desc class=\"label\">New Task: </label>\r\n                <input name=\"desc\" className=\"inputs\" type=\"text\" placeholder=\"task name\" value={this.state.desc} onChange={this.handleTextChange} required/>\r\n                <input className=\"inputs\" type=\"date\" value={this.state.when} onChange={this.handleDateChange} required/>\r\n                <input className=\"inputs\" type=\"time\" value={this.state.hour} onChange={this.handleTimeChange}/>\r\n                <button type=\"submit\" className=\"submitButton\">+</button>\r\n            </form>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Footer from './Footer';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\r\n    this.handleCompleteTask = this.handleCompleteTask.bind(this);\r\n    this.handleEditTask = this.handleEditTask.bind(this);\r\n    this.state = {\r\n      tasks:  [\r\n                {desc: 'Finish JS Work', when: \"2018-08-15\", hour: '14:30', active: true},\r\n                {desc: 'Learn React', when: \"2018-08-16\", hour: '14:30',  active: false},\r\n                {desc: 'Learn NPM', when: \"2018-08-17\", hour: '14:30',  active: true},\r\n                {desc: 'Learn NODE.JS', when: \"2018-08-18\", hour: '14:30',  active: true}\r\n              ]\r\n    }\r\n  }\r\n\r\n  handleSubmit(taskToAdd) {\r\n    const prevState = Object.assign({}, this.state);\r\n    prevState.tasks.push(taskToAdd);\r\n    this.setState({tasks: prevState.tasks,});\r\n  }\r\n\r\n  handleRemoveTask(indexToRemove) {\r\n    const prevState = Object.assign({}, this.state);\r\n    prevState.tasks.splice(indexToRemove, 1);\r\n    this.setState({tasks: prevState.tasks,});\r\n  }\r\n\r\n  handleCompleteTask(indexToComplete) {\r\n    const prevState = Object.assign({}, this.state);\r\n    prevState.tasks[indexToComplete].active = false;\r\n    this.setState({tasks: prevState.tasks,});\r\n  }\r\n\r\n  handleEditTask(indexToEdit, taskData) {\r\n    const prevState = Object.assign({}, this.state);\r\n    prevState.tasks[indexToEdit] = taskData;\r\n    prevState.tasks[indexToEdit].active = true;\r\n    console.log(taskData);\r\n    this.setState({tasks: prevState.tasks,});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <h1 className =\"title\">todoZ</h1>\r\n          <p>your daily tasks</p>\r\n        </header>\r\n        <div className= \"tasklist-container\">\r\n          <TaskList className =\"tasklist\"\r\n                    value = {this.state.tasks}\r\n                    onRemoveTask = {this.handleRemoveTask}\r\n                    onCompleteTask = {this.handleCompleteTask}\r\n                    onEditTask = {this.handleEditTask}/>\r\n        </div>\r\n        <Footer className =\"footer\" onSubmit = {this.handleSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}